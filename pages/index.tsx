import Head from 'next/head'
import Image from 'next/image'
import { Space_Grotesk, Permanent_Marker, Noto_Sans } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Grid from '@mui/material/Grid'
import List from '@mui/material/List'
import ListItem from '@mui/material/ListItem'
import ListItemIcon from '@mui/material/ListItemIcon'
import ListItemText from '@mui/material/ListItemText'
import {
  animated,
  useSpring,
  config,
  useSpringRef,
  useChain
} from "react-spring";
import { useEffect, useState } from 'react'
import Box from '@mui/material/Box'
import Link from 'next/link'
import React from 'react'
import { database } from '@/firebase/firebaseClient'
import { ref, set } from 'firebase/database'
import { v4 } from "uuid"
import { addSubscriber } from '@/helpers/manageDataBase'


export const spaceGrotesk700 = Space_Grotesk({ subsets: ['latin'], weight: "700" })
export const spaceGrotesk600 = Space_Grotesk({ subsets: ['latin'], weight: "600" })
export const permanentMarker400 = Permanent_Marker({ subsets: ['latin'], weight: "400" })
export const notoSans400 = Noto_Sans({ subsets: ['latin'], weight: "400" })
export const notoSans700 = Noto_Sans({ subsets: ['latin'], weight: "700" })

export default function Home() {

  const [slideBottom, setSlideBottom] = useState('100%')
  const [slideTop, setSlideTop] = useState('40%')
  const [slideTopShort, setSlideTopShort] = useState('10%')
  const [slideOpacity, setSlideOpacity] = useState('0')
  const [validationError, setValidationError] = useState(false)
  const [email, setEmail] = useState('')
  const [savedSuccessfully, setSavedSuccessfully] = useState(false)
  const [disableSubmit, setDisableSubmit] = useState(false)

  useEffect(() => {
    setSlideBottom('0')
    setSlideTop('0')
    setSlideTopShort('0')
    setSlideOpacity('1')
  }, []);

  // const writeInDataBase = (email: string) => {
  //   setDisableSubmit(true)
  //   const referenceDb = ref(database, `subscribers/${v4()}`);
  //   set(referenceDb, {
  //     email
  //   })
  //     .then(() => {
  //       setSavedSuccessfully(true)
  //     })
  //     .catch((error) => {
  //       // The write failed...
  //     });
  // };

  const [isHovering, setIsHovered] = useState(false);
  const onMouseEnter = () => setIsHovered(true);
  const onMouseLeave = () => setIsHovered(false);

  const [isHoveringSubmit, setIsHoveredSubmit] = useState(false);
  const onMouseEnterSubmit = () => setIsHoveredSubmit(true);
  const onMouseLeaveSubmit = () => setIsHoveredSubmit(false);

  const [isChecked, setIsChecked] = useState(false);
  const checkboxAnimationRef = useSpringRef();
  const checkboxAnimationStyle = useSpring({
    backgroundColor: isChecked ? "#030303" : "#FCD0F4",
    border: "2px #030303 solid",
    borderColor: validationError ? "#FF6464" : "#030303",
    config: config.gentle,
    ref: checkboxAnimationRef
  });

  const [checkmarkLength, setCheckmarkLength] = useState(null);

  const checkmarkAnimationRef = useSpringRef();
  const checkmarkAnimationStyle = useSpring({
    x: isChecked ? 0 : checkmarkLength,
    config: config.gentle,
    ref: checkmarkAnimationRef
  });

  useChain(
    isChecked
      ? [checkboxAnimationRef, checkmarkAnimationRef]
      : [checkmarkAnimationRef, checkboxAnimationRef],
    [0, 0.1]
  );

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setValidationError(!isChecked)
    isChecked && addSubscriber(email)
    isChecked && setEmail('')
    // isChecked && writeInDataBase(email)
    // isChecked && setEmail('')
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid container sx={{ flexGrow: 1, backgroundColor: '#FCD0F4', height: "100%" }} className={styles.main2}>
        <Grid item xs={12} sm={12} md={12} lg={6}>
          <Grid container className={styles.main}
            sx={{ flexGrow: 1, backgroundColor: '#030303' }}
            // justifyContent="center"
          >

            <Box className={styles.slide_down} sx={{ background: "#FCD0F4" }}>
              <Box
                className={styles.hide_slide_down}
                sx={{
                  borderBottom: '1px solid #FCD0F4',
                  width: '100%',
                  display: 'flex',
                  justifyContent: 'center',
                  height: '6rem',
                  bottom: slideBottom,
                  background: "#030303"
                }}
              >
                <div className={`${styles.logo_title_wrapper}`}>
                  <Box sx={{ position: 'relative', padding: '2rem', marginRight: '2rem', marginLeft: '0.5rem' }} className={styles.height6}>
                    <Image
                      src="/word_search_maze_logo.svg"
                      alt="Word Search Maze"
                      fill
                      sizes="(max-width: 70px) 100vw,
                (max-width: 58px) 50vw"
                    />
                  </Box>
                  <h2 className={spaceGrotesk700.className}>Enjoy Word Search, Create Your Book and Sell It!</h2>
                </div>
              </Box>
            </Box>
            <Box className={styles.slide}>
              <Box className={styles.hid_slide} sx={{ top: slideTop }}>
                <Box className={`${styles.yellow_background}`} sx={{ opacity: slideOpacity }}>
                  <div className={styles.smile_wrapper}>
                    <Box sx={{ position: 'relative', padding: '2.5rem' }}>
                      <Image
                        src="/smile.svg"
                        alt="Word Search Maze"
                        fill
                        sizes="(max-width: 70px) 100vw,
                        (max-width: 58px) 50vw"
                      />
                    </Box>
                  </div>
                  <div className={styles.why_wrapper}>
                    <span className={`${permanentMarker400.className} ${styles.marker_title} ${styles.pink_marker}`}>{"Why us?"}</span>
                    <p className={`${notoSans400.className} ${styles.body_text} ${styles.margin_bottom_15}`}>{"We're working on the best and easiest word search builder and we're almost done."} </p>
                    <h3 className={`${notoSans700.className}`}>Our features:</h3>
                    <div>
                      <List>
                        <ListItem className={styles.padding_bottom_1}>
                          <ListItemIcon sx={{ minWidth: '1.5rem', marginRight: '1rem' }}>
                            <Box sx={{ position: 'relative', padding: '0.7rem' }}>
                              <Image
                                src="/check.svg"
                                alt="Word Search Maze"
                                fill
                              />
                            </Box>
                          </ListItemIcon>
                          <ListItemText
                            disableTypography
                            primary={<p className={`${notoSans400.className} ${styles.body_text}`}>Create word search books and sell them on Amazon.</p>}
                          />
                        </ListItem>
                        <ListItem className={styles.padding_bottom_1}>
                          <ListItemIcon sx={{ minWidth: '1.5rem', marginRight: '1rem' }}>
                            <Box sx={{ position: 'relative', padding: '0.7rem' }}>
                              <Image
                                src="/check.svg"
                                alt="Word Search Maze"
                                fill
                              />
                            </Box>
                          </ListItemIcon>
                          <ListItemText
                            disableTypography
                            primary={<p className={`${notoSans400.className} ${styles.body_text}`}>Create fun and exciting learning materials in minutes.</p>}
                          />
                        </ListItem>
                        <ListItem className={styles.padding_bottom_1}>
                          <ListItemIcon sx={{ minWidth: '1.5rem', marginRight: '1rem' }}>
                            <Box sx={{ position: 'relative', padding: '0.7rem' }}>
                              <Image
                                src="/check.svg"
                                alt="Word Search Maze"
                                fill
                              />
                            </Box>
                          </ListItemIcon>
                          <ListItemText
                            disableTypography
                            primary={<p className={`${notoSans400.className} ${styles.body_text}`}>Organize themed house parties with exciting word search games.</p>}
                          />
                        </ListItem>
                      </List>
                    </div>
                  </div>
                </Box>
              </Box>
            </Box>
          </Grid>

        </Grid>
        <Grid item xs={12} sm={12} md={12} lg={6}>
          <Grid
            container className={styles.main}
            sx={{ flexGrow: 1, backgroundColor: '#FCD0F4' }}
            direction="column"
            justifyContent="space-between"
            alignItems="center"
          >
            <Box className={styles.slide_down}>
              <Box
                className={`${styles.height6} ${styles.hide_slide_down}`}
                sx={{
                  borderBottom: '1px solid #030303',
                  width: '100%',
                  display: 'flex',
                  justifyContent: 'center',
                  bottom: slideBottom,
                }}>
                <div className={styles.logo_title_wrapper}>
                  <h1 className={spaceGrotesk600.className}>Subscribe Us</h1>
                </div>
              </Box>
            </Box>
            <Box className={styles.slide_short}>
              <Box className={styles.hid_slide_short} sx={{ top: slideTopShort }}>
                <div className={styles.subscribe_block_wrapper}>
                  <div className={styles.waiting_titles_wrapper}>
                    <span className={`${permanentMarker400.className} ${styles.marker_title} ${styles.yellow_marker}`}>
                      {savedSuccessfully
                        ? ' Thanks for subscribing!'
                        : ' while you’re waiting ...'
                      }
                    </span>
                    <p className={`${notoSans400.className} ${styles.body_text} ${styles.margin_bottom_15}`}>
                      {savedSuccessfully
                        ? 'Our aim is to provide valuable content to keep you informed and knowledgeable. Exciting things ahead!'
                        : "Leave your email below and we'll inform you when our amazing platform is live!"
                      }
                    </p>
                  </div>
                  {!savedSuccessfully &&
                    <>
                      <div className={styles.inputWithButton}>
                        <form onSubmit={(e) => handleSubmit(e)}>
                          <input
                            type="email"
                            className={styles.text_input}
                            placeholder='Leave your email here'
                            onChange={(e) => setEmail(e.target.value)}
                            value={email}
                          />
                          <button
                            type="submit"
                            disabled={disableSubmit}
                            className={styles.submit_button}
                            onMouseEnter={onMouseEnterSubmit}
                            onMouseLeave={onMouseLeaveSubmit}
                            style={{ opacity: disableSubmit ? '0.4' : '1' }}
                          >
                            <Box sx={{ display: 'flex' }}>
                              <svg width="20" height="20" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
                                viewBox="0 0 24 24" >
                                <path d="M20.7,13.3l-4-4c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l2.3,2.3H9.2c-0.6,0-1.2-0.2-1.6-0.7c-0.4-0.4-0.7-1-0.7-1.6
	                                V5c0-0.6-0.4-1-1-1S5,4.4,5,5v5.7c0,1.1,0.4,2.2,1.2,3C7,14.6,8.1,15,9.2,15h8.3l-2.3,2.3c-0.4,0.4-0.4,1,0,1.4
	                                c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l4-4C21.1,14.3,21.1,13.7,20.7,13.3z"/>
                              </svg>

                            </Box>
                            {/* {isHoveringSubmit ?
                              <Image
                                src="/arrow_black.svg"
                                alt="Word Search Maze"
                                fill
                              />
                              :
                              <Image
                                src="/arrow.svg"
                                alt="Word Search Maze"
                                fill
                              />
                            } */}
                          </button>
                        </form>
                      </div>
                      <div className={styles.checkbox_label_wrapper}>
                        <label className={styles.margin_right_1}>
                          <input
                            className={styles.checkbox_input}
                            type="checkbox"
                            onChange={() => {
                              setIsChecked(!isChecked)
                              setValidationError(false)
                            }}
                          />
                          <animated.svg
                            style={checkboxAnimationStyle}
                            className={styles.checkbox}
                            aria-hidden="true"
                            viewBox="0 0 15 11"
                            fill="none"
                            height={isChecked ? '2rem' : '1.6rem'}
                            width={isChecked ? '2rem' : '1.6rem'}
                          >
                            <animated.path
                              d="M1 4.5L5 9L14 1"
                              strokeWidth="1"
                              stroke="#FFFF48"
                              ref={(ref) => {
                                if (ref) {
                                  // @ts-ignore
                                  setCheckmarkLength(ref.getTotalLength());
                                }
                              }}
                              // @ts-ignore
                              strokeDasharray={checkmarkLength}
                              // @ts-ignore
                              strokeDashoffset={checkmarkAnimationStyle.x}
                            />
                          </animated.svg>
                        </label>
                        <p onClick={() => {
                          setIsChecked(!isChecked);
                        }}
                          className={`${notoSans400.className} ${styles.small_body_text}`}
                          style={{ color: validationError ? "#FF6464" : "#030303" }}
                        >
                          Yor personal data will be used to support your experience throughout this
                          website and for other purposes described in our&nbsp;
                          <Link
                            href='/'
                            className={`${notoSans400.className} ${styles.small_body_text}`}
                            style={{ color: validationError ? "#FF6464" : "#030303" }}
                          >
                            Terms & Privacy policy
                          </Link>
                        </p>
                      </div>
                    </>
                  }
                </div>
              </Box>
            </Box>

            <Box className={styles.slide_short}>
              <Box className={styles.hid_slide_short} sx={{ top: slideTopShort }}>
                <Link href='/' className={styles.text_decoration_none}>
                  <div
                    className={styles.social_wrapper}
                    onMouseEnter={onMouseEnter}
                    onMouseLeave={onMouseLeave}
                  >
                    {/* {isHovering ? */}
                    <Box sx={{ display: 'flex', justifyContent: 'center', width: '44px', marginRight: '12px' }}>
                    <button type="submit" className={`${styles.social_button}`}>
                      <Box sx={{ display: 'flex' }}>
                        <svg width="20" height="20" viewBox="0 0 18 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M12.75 7.9375C14.28 9.03606 16.1164 9.62633 18 9.625V5.875C16.6076 5.875 15.2723 5.32188 14.2877 4.33731C13.3031
                      3.35274 12.75 2.01739 12.75 0.625H9V12.625C8.99997 13.0948 8.87388 13.5559 8.63489 13.9603C8.3959 14.3647 8.05276 14.6976
                      7.64127 14.9242C7.22978 15.1508 6.76502 15.2629 6.29548 15.2486C5.82594 15.2344 5.36882 15.0944 4.97181 14.8433C4.5748 14.5922
                      4.25245 14.2392 4.03838 13.821C3.82432 13.4029 3.72639 12.9349 3.75481 12.466C3.78323 11.9971 3.93695 11.5445 4.19995 11.1552C4.46294
                      10.766 4.82557 10.4544 5.25 10.2531V6.35312C4.05617 6.56716 2.94816 7.11732 2.05605 7.93901C1.16394 8.76071 0.524744 9.81984 0.213492
                      10.9921C-0.0977598 12.1643 -0.0681492 13.4011 0.298848 14.5571C0.665845 15.7131 1.355 16.7404 2.28541 17.5185C3.21583 18.2965 4.34889
                      18.793 5.5516 18.9497C6.7543 19.1063 7.97674 18.9166 9.07542 18.4029C10.1741 17.8891 11.1034 17.0726 11.7543 16.0492C12.4052 15.0257
                      12.7506 13.8379 12.75 12.625V7.9375Z" />
                        </svg>
                      </Box>
                    </button>
                    </Box>
                    <h3 className={`${notoSans700.className}`}>Tik Tok</h3>
                  </div>
                </Link>
              </Box>
            </Box>
          </Grid>
        </Grid>
      </Grid>
    </>
  )
}
